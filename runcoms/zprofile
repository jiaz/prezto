#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

#
# Editors
#

export EDITOR='emacs'
export VISUAL='emacs'
export PAGER='less'

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

#
# Paths
#

export PATH="$HOME/bin:$PATH"

############
# Java Env #
############

# jenv
export JENV_ROOT="$HOME/.jenv"

# Add jenv root to PATH
if [[ -d $JENV_ROOT ]];then
    export PATH="$JENV_ROOT/shims:$PATH"
fi

# Initialize jenv
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

############
# Ruby Env #
############

# rbenv
export RBENV_ROOT="$HOME/.rbenv"

# Add rbenv root to PATH
if [[ -d $RBENV_ROOT ]];then
    export PATH="$RBENV_ROOT/shims:$PATH"
fi

# Initialize rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

##############
# Python Env #
##############

# pyenv
export PYENV_ROOT="$HOME/.pyenv"

# Add pyenv root to PATH
if [[ -d $PYENV_ROOT ]];then
    export PATH="$PYENV_ROOT/shims:$PATH"
fi

# Initialize pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

export PIP_REQUIRE_VIRTUALENV=true
# Perfect! But once that option is set, how do we install or upgrade a global package?
syspip(){
    PIP_REQUIRE_VIRTUALENV="" pip "$@"
}
# If in the future we want to upgrade our global packages, the above function enables us to do so via:
# syspip install --upgrade pip setuptools virtualenv

############
# Node Env #
############

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && . $NVM_DIR/nvm.sh

# nvm use 0.10
if which nodenv > /dev/null; then eval "$(nodenv init -)"; fi

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  /usr/local/{bin,sbin}
  $path
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$LOGNAME"
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"
